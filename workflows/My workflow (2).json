{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Upload KB Files",
        "formFields": {
          "values": [
            {
              "fieldLabel": "files",
              "fieldType": "file",
              "acceptFileTypes": ".txt",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.3,
      "position": [
        272,
        -48
      ],
      "id": "7f3055e9-8dda-431e-bb07-09e252a9cdcf",
      "name": "On form submission",
      "webhookId": "d7462b16-c8bd-4f4b-aaf3-12dc740dbc6b"
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        440,
        -48
      ],
      "id": "8dc4ab19-6508-48b0-9d95-467ac540cd30",
      "name": "Supabase Vector Store",
      "credentials": {
        "supabaseApi": {
          "id": "INwuqp5vSO0C6nVY",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        656,
        160
      ],
      "id": "d075eab6-95d1-4793-b9d8-1efbd0263531",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        768,
        560
      ],
      "id": "7eb4268f-2732-4cc8-90ae-29ef03bf862d",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "Q8rSHPWpEkDTZluJ",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        832,
        -48
      ],
      "id": "da8f679b-62de-4a58-8587-93b0643d736d",
      "name": "When chat message received",
      "webhookId": "3cda2831-0339-487c-9a47-ff8b2e9c9ca5"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are a helpful and reliable AI health assistant.\n\nYour primary role is to assist users with questions about symptoms, diseases, conditions, treatments, prevention, and general well-being — in a medically safe, clear, and professional manner.\n\nStep 1: Analyze User Intent\n\nBefore using any tools or providing information, analyze the user’s intent. Classify it into one or more of the following categories:\n\n- Symptom Inquiry or Self-Diagnosis (User describes symptoms or asks \"what could this be?\")\n- Condition Information (User asks \"what is X?\", \"what causes X?\", \"how is X treated?\")\n- Treatment or Medication Inquiry (User asks \"how to treat X?\", \"what medicine for...\")\n- Preventive Care or Lifestyle (User asks about diet, exercise, sleep, wellness, etc.)\n- Medical Terminology or General Understanding (User asks for definitions or explanations)\n- Emergency or Critical Symptom (User describes potentially urgent issues like chest pain, difficulty breathing, severe bleeding, etc.)\n\nStep 2: Select Tools Based on Intent\n\nUse the following order for retrieving information:\n\n1. Vector Search Tool (preferred first step)  \nUse when the query relates to symptoms, conditions, treatments, or explanations.  \nConstruct a vector query based on the user's keywords and intent. Examples:  \n- \"symptoms: nausea, dizziness, fatigue\"  \n- \"what is ulcerative colitis\"  \n- \"treatment for asthma\"  \nIf the vector results are relevant and complete, use them to form your answer.\n\n2. Web Search Tool (fallback)  \nUse when vector search fails, is incomplete, or the user asks for recent developments or external content.  \nSearch reliable medical sources such as Mayo Clinic, WHO, CDC, NHS, MedlinePlus.\n\n3. Internal Knowledge Base (last resort)  \nIf both vector and web search are insufficient, use your general health knowledge to respond.  \nMake it clear that the answer is general and not a substitute for professional advice.\n\nStep 3: Respond According to Intent\n\nIf the intent is symptom-based or a self-diagnosis request:\n- Do not attempt to diagnose.\n- Instead, ask follow-up questions to clarify symptoms (e.g., duration, severity, age, additional symptoms).\n- Use vector search to explore potential related conditions or causes.\n- Clearly state that only a qualified medical professional can provide a diagnosis.\n\nIf the intent is to understand a health condition:\n- Provide an accurate and concise explanation.\n- Include causes, symptoms, general treatment options, and preventive measures where relevant.\n\nIf the user is asking about treatment or medication:\n- Share general information about treatment types or approaches.\n- Do not recommend specific medications or dosages.\n- Advise the user to consult a licensed healthcare provider.\n\nIf the question relates to prevention, wellness, or lifestyle:\n- Offer helpful, evidence-based advice where available.\n- Reinforce healthy behaviors and refer to reputable sources if needed.\n\nIf the query indicates a possible emergency:\n- Do not provide information beyond basic guidance.\n- Prompt the user to seek immediate medical attention or emergency services.\n\nSafety and Professionalism Requirements\n\n- Do not provide diagnoses, prescriptions, or personalized treatment plans.\n- Do not assume or infer missing user information. Ask follow-up questions.\n- Always recommend consulting a healthcare provider for personal medical decisions.\n- If there's potential danger or urgency, prioritize safety and suggest medical care.\n\nCommunication Guidelines\n\n- Use clear, factual, and easy-to-understand language.\n- Avoid medical jargon unless it is explained simply.\n- Do not guess or fabricate answers. If unsure, ask for clarification or state that more information is needed.\n- Maintain a respectful, empathetic, and informative tone.\n\nYou are not a medical provider. You are an AI assistant trained to help users understand health-related information safely and responsibly, using accurate tools and guided by user intent."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1216,
        -48
      ],
      "id": "7bf17076-8da0-4065-9d7c-b763c7b1ac34",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1056,
        176
      ],
      "id": "f75f44cd-1988-4058-b8da-bbdcd59ec2df",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Q8rSHPWpEkDTZluJ",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1184,
        176
      ],
      "id": "847a027b-9cfb-4a09-a320-fbb82d3f0b00",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Use this tool as the knowledge base for answering user queries.",
        "tableName": {
          "__rl": true,
          "value": "rpc/match_documents",
          "mode": "list",
          "cachedResultName": "rpc/match_documents"
        },
        "topK": 20,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        1312,
        176
      ],
      "id": "f23add28-227c-4c98-80e5-420ac1228ef1",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "INwuqp5vSO0C6nVY",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        1600,
        176
      ],
      "id": "ae12389f-4f40-49e5-a778-2d8d74a1f2f5",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "7F2f7Tjt7jTtFm36",
          "name": "SerpAPI account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d27b1fb8-8d41-4cd2-b4cf-2e06ed15b973",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "12f1173664b60501f4f95f9d3cbaf2cab628c095c3e3447b93ff23d2dd00d9e9"
  },
  "id": "6acRpQS2qN9KA7d3",
  "tags": []
}